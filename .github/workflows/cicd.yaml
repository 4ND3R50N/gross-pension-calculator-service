name: CICD

on:
  push:
    branches:
      - main
      - feature/ci-cd-pipeline
  pull_request:
    branches:
      - main

jobs:
  compile:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 11 ]
    name: Java ${{ matrix.java }} compile
    steps:
      - uses: actions/checkout@master
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - run: mvn -f pom.xml clean compile
  build:
    runs-on: ubuntu-latest
    needs: compile
    name: Build Maven project
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build and test project
        run: mvn -f pom.xml clean verify
      - name: Upload Maven build artifact
        run: ls -la
        uses: actions/upload-artifact@v1
        with:
          name: artifact
          path: |
            target/gross-pension-calculator-service-0.0.1-SNAPSHOT.jar
            Dockerfile
  deploy:
    runs-on: ubuntu-latest
    needs: [ build ]
#    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }} # Only run this workflow if it is master branch on push event
    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: artifact
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: naokiii/gross-pension-service:latest
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
#  deploy:
#    runs-on: ubuntu-latest
#    needs: build
#    name: Build Docker container and deploy to Kubernetes
#    steps:
#      - uses: actions/checkout@v1
#      - name: Download Maven build artifact
#        uses: actions/download-artifact@v1
#        with:
#          name: artifact
#      - name: Build Docker container
#        run: |
#          mkdir -p github-actions-java-maven/target
#          mv artifact/github-actions-java-maven.jar github-actions-java-maven/target
#          docker build -t de.rieckpil.blog/github-actions-sample github-actions-java-maven
#      - name: Access secrets
#        env:
#          SUPER_SECRET: ${{ secrets.SUPER_SECRET }}
#        run: echo "Content of secret - $SUPER_SECRET"
#      - name: Push Docker images
#        run: echo "Pushing Docker image to Container Registry (e.g. ECR)"
#      - name: Deploy application
#        run: echo "Deploying application (e.g. Kubernetes)"